{"ast":null,"code":"import _objectSpread from\"/Users/kenanfranklin/Sites/daycare-react/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// src/services/recommendationService.ts\nimport{calculateMatchScore}from'./candidateMatchingEngine';// Type for a candidate enriched with their match score\n/**\n * Gets top recommended candidates for a specific job\n * @param job - The job posting\n * @param candidates - Array of all available candidates\n * @param limit - Maximum number of candidates to return (default: 5)\n * @returns Array of top candidates sorted by match score (highest first)\n */export const getRecommendationsForJob=function(job,candidates){let limit=arguments.length>2&&arguments[2]!==undefined?arguments[2]:5;// Calculate match scores for all candidates\nconst candidatesWithScores=candidates.map(candidate=>_objectSpread(_objectSpread({},candidate),{},{matchScore:calculateMatchScore(job,candidate)}));// Sort by match score (highest first) and return top N\nreturn candidatesWithScores.sort((a,b)=>b.matchScore-a.matchScore).slice(0,limit);};/**\n * Analyzes a candidate against a job to identify strengths and gaps\n * @param job - The job posting\n * @param candidate - The candidate profile\n * @returns Object with arrays of strengths and gaps\n */export const generateStrengthsAndGaps=(job,candidate)=>{const strengths=[];const gaps=[];// Analyze skills\nif(candidate.skills&&candidate.skills.length>0){const jobText=(job.description+' '+job.requirements.join(' ')).toLowerCase();const matchingSkills=candidate.skills.filter(skill=>jobText.includes(skill.toLowerCase())||job.requirements.some(req=>req.toLowerCase().includes(skill.toLowerCase())));if(matchingSkills.length>=3){strengths.push(\"Strong skill alignment: \".concat(matchingSkills.slice(0,3).join(', ')));}else if(matchingSkills.length>0){strengths.push(\"Some relevant skills: \".concat(matchingSkills.join(', ')));}else{gaps.push('Limited skills matching job requirements');}}else{gaps.push('No skills listed on profile');}// Analyze experience titles\nif(candidate.experience&&candidate.experience.length>0){const hasRelevantTitle=candidate.experience.some(exp=>exp.title.toLowerCase().includes(job.title.toLowerCase())||job.title.toLowerCase().includes(exp.title.toLowerCase()));if(hasRelevantTitle){strengths.push('Direct experience in a similar role');}else{// Check for related experience\nconst hasChildcareExp=candidate.experience.some(exp=>exp.title.toLowerCase().includes('teacher')||exp.title.toLowerCase().includes('caregiver')||exp.title.toLowerCase().includes('childcare')||exp.title.toLowerCase().includes('education'));if(hasChildcareExp){strengths.push('Relevant childcare/education experience');}else{gaps.push('Limited relevant job title experience');}}}else{gaps.push('No work experience listed');}// Analyze years of experience\nif(candidate.yearsOfExperience!==undefined){// Extract required years from job requirements\nlet requiredYears=1;for(const requirement of job.requirements){const yearMatch=requirement.match(/(\\d+)\\+?\\s*years?/i);if(yearMatch){requiredYears=Math.max(requiredYears,parseInt(yearMatch[1],10));}}if(candidate.yearsOfExperience>=requiredYears+2){strengths.push(\"Extensive experience (\".concat(candidate.yearsOfExperience,\"+ years)\"));}else if(candidate.yearsOfExperience>=requiredYears){strengths.push(\"Meets experience requirements (\".concat(candidate.yearsOfExperience,\" years)\"));}else{gaps.push(\"Fewer years of experience than preferred (\".concat(candidate.yearsOfExperience,\" vs \").concat(requiredYears,\" years)\"));}}else{gaps.push('Years of experience not specified');}// Analyze education\nconst educationReqs=job.requirements.filter(req=>req.toLowerCase().includes('degree')||req.toLowerCase().includes('education')||req.toLowerCase().includes('bachelor')||req.toLowerCase().includes('master'));if(educationReqs.length>0){if(candidate.education&&candidate.education.length>0){const hasMatchingEducation=educationReqs.some(req=>candidate.education.some(edu=>req.toLowerCase().includes(edu.degree.toLowerCase())||edu.degree.toLowerCase().includes('early childhood')||edu.degree.toLowerCase().includes('education')));if(hasMatchingEducation){strengths.push('Education requirements met');}else{gaps.push('May not fully meet education requirements');}}else{gaps.push('No education information provided');}}// Analyze certifications\nconst certReqs=job.requirements.filter(req=>req.toLowerCase().includes('certif')||req.toLowerCase().includes('license')||req.toLowerCase().includes('cpr')||req.toLowerCase().includes('first aid'));if(certReqs.length>0){if(candidate.certifications&&candidate.certifications.length>0){const hasCertifications=certReqs.some(req=>candidate.certifications.some(cert=>req.toLowerCase().includes(cert.toLowerCase())||cert.toLowerCase().includes('cpr')||cert.toLowerCase().includes('first aid')));if(hasCertifications){strengths.push('Has required certifications');}else{gaps.push('May need to obtain specific certifications');}}else{gaps.push('No certifications listed');}}// Analyze location\nif(candidate.location&&job.location){const candidateCity=candidate.location.split(',')[0].trim().toLowerCase();const jobCity=job.location.split(',')[0].trim().toLowerCase();if(candidateCity===jobCity){strengths.push(\"Located in same area (\".concat(candidateCity,\")\"));}else{gaps.push(\"Location difference may require commute or relocation\");}}// Analyze job type preference\nif(candidate.preferredJobTypes&&candidate.preferredJobTypes.includes(job.type)){strengths.push('Job type aligns with preferences');}else if(candidate.preferredJobTypes&&candidate.preferredJobTypes.length>0){gaps.push('Job type may not match stated preferences');}return{strengths,gaps};};/**\n * Generates a human-readable summary of recommendations for a job\n * @param job - The job posting\n * @param topCandidates - Array of top recommended candidates\n * @returns A summary paragraph for recruiters\n */export const generateRecommendationSummary=(job,topCandidates)=>{if(topCandidates.length===0){return\"No qualified candidates found for the \".concat(job.title,\" position at \").concat(job.organizationName,\". Consider adjusting requirements or expanding your search criteria.\");}const topCandidate=topCandidates[0];const avgScore=topCandidates.reduce((sum,candidate)=>sum+candidate.matchScore,0)/topCandidates.length;let summary=\"We found \".concat(topCandidates.length,\" qualified candidate\").concat(topCandidates.length>1?'s':'',\" for the \").concat(job.title,\" role at \").concat(job.organizationName,\". \");summary+=\"The top match is \".concat(topCandidate.firstName,\" \").concat(topCandidate.lastName,\" with a \").concat(topCandidate.matchScore,\"% compatibility score. \");// Add assessment based on average score\nif(avgScore>=85){summary+='The candidate pool is exceptionally strong with multiple highly qualified applicants.';}else if(avgScore>=70){summary+='The overall candidate pool is strong with several well-qualified applicants.';}else if(avgScore>=55){summary+='The candidate pool shows promise, though some candidates may need additional training or development.';}else{summary+='Consider expanding your search or adjusting requirements to find more closely matched candidates.';}// Add insights about top candidate\nif(topCandidate.yearsOfExperience){summary+=\" \".concat(topCandidate.firstName,\" brings \").concat(topCandidate.yearsOfExperience,\" years of relevant experience\");if(topCandidate.education&&topCandidate.education.length>0){const degree=topCandidate.education[0].degree;summary+=\" and holds a \".concat(degree);}summary+='.';}return summary;};","map":{"version":3,"names":["calculateMatchScore","getRecommendationsForJob","job","candidates","limit","arguments","length","undefined","candidatesWithScores","map","candidate","_objectSpread","matchScore","sort","a","b","slice","generateStrengthsAndGaps","strengths","gaps","skills","jobText","description","requirements","join","toLowerCase","matchingSkills","filter","skill","includes","some","req","push","concat","experience","hasRelevantTitle","exp","title","hasChildcareExp","yearsOfExperience","requiredYears","requirement","yearMatch","match","Math","max","parseInt","educationReqs","education","hasMatchingEducation","edu","degree","certReqs","certifications","hasCertifications","cert","location","candidateCity","split","trim","jobCity","preferredJobTypes","type","generateRecommendationSummary","topCandidates","organizationName","topCandidate","avgScore","reduce","sum","summary","firstName","lastName"],"sources":["/Users/kenanfranklin/Sites/daycare-react/src/services/recommendationService.ts"],"sourcesContent":["// src/services/recommendationService.ts\n\nimport { Job, UserProfile } from '../types/data';\nimport { calculateMatchScore } from './candidateMatchingEngine';\n\n// Type for a candidate enriched with their match score\nexport type RecommendedCandidate = UserProfile & { matchScore: number };\n\n/**\n * Gets top recommended candidates for a specific job\n * @param job - The job posting\n * @param candidates - Array of all available candidates\n * @param limit - Maximum number of candidates to return (default: 5)\n * @returns Array of top candidates sorted by match score (highest first)\n */\nexport const getRecommendationsForJob = (\n  job: Job, \n  candidates: UserProfile[], \n  limit: number = 5\n): RecommendedCandidate[] => {\n  // Calculate match scores for all candidates\n  const candidatesWithScores: RecommendedCandidate[] = candidates.map(candidate => ({\n    ...candidate,\n    matchScore: calculateMatchScore(job, candidate)\n  }));\n  \n  // Sort by match score (highest first) and return top N\n  return candidatesWithScores\n    .sort((a, b) => b.matchScore - a.matchScore)\n    .slice(0, limit);\n};\n\n/**\n * Analyzes a candidate against a job to identify strengths and gaps\n * @param job - The job posting\n * @param candidate - The candidate profile\n * @returns Object with arrays of strengths and gaps\n */\nexport const generateStrengthsAndGaps = (\n  job: Job, \n  candidate: UserProfile\n): { strengths: string[], gaps: string[] } => {\n  const strengths: string[] = [];\n  const gaps: string[] = [];\n  \n  // Analyze skills\n  if (candidate.skills && candidate.skills.length > 0) {\n    const jobText = (job.description + ' ' + job.requirements.join(' ')).toLowerCase();\n    const matchingSkills = candidate.skills.filter(skill => \n      jobText.includes(skill.toLowerCase()) || \n      job.requirements.some(req => req.toLowerCase().includes(skill.toLowerCase()))\n    );\n    \n    if (matchingSkills.length >= 3) {\n      strengths.push(`Strong skill alignment: ${matchingSkills.slice(0, 3).join(', ')}`);\n    } else if (matchingSkills.length > 0) {\n      strengths.push(`Some relevant skills: ${matchingSkills.join(', ')}`);\n    } else {\n      gaps.push('Limited skills matching job requirements');\n    }\n  } else {\n    gaps.push('No skills listed on profile');\n  }\n  \n  // Analyze experience titles\n  if (candidate.experience && candidate.experience.length > 0) {\n    const hasRelevantTitle = candidate.experience.some(exp =>\n      exp.title.toLowerCase().includes(job.title.toLowerCase()) ||\n      job.title.toLowerCase().includes(exp.title.toLowerCase())\n    );\n    \n    if (hasRelevantTitle) {\n      strengths.push('Direct experience in a similar role');\n    } else {\n      // Check for related experience\n      const hasChildcareExp = candidate.experience.some(exp =>\n        exp.title.toLowerCase().includes('teacher') ||\n        exp.title.toLowerCase().includes('caregiver') ||\n        exp.title.toLowerCase().includes('childcare') ||\n        exp.title.toLowerCase().includes('education')\n      );\n      \n      if (hasChildcareExp) {\n        strengths.push('Relevant childcare/education experience');\n      } else {\n        gaps.push('Limited relevant job title experience');\n      }\n    }\n  } else {\n    gaps.push('No work experience listed');\n  }\n  \n  // Analyze years of experience\n  if (candidate.yearsOfExperience !== undefined) {\n    // Extract required years from job requirements\n    let requiredYears = 1;\n    for (const requirement of job.requirements) {\n      const yearMatch = requirement.match(/(\\d+)\\+?\\s*years?/i);\n      if (yearMatch) {\n        requiredYears = Math.max(requiredYears, parseInt(yearMatch[1], 10));\n      }\n    }\n    \n    if (candidate.yearsOfExperience >= requiredYears + 2) {\n      strengths.push(`Extensive experience (${candidate.yearsOfExperience}+ years)`);\n    } else if (candidate.yearsOfExperience >= requiredYears) {\n      strengths.push(`Meets experience requirements (${candidate.yearsOfExperience} years)`);\n    } else {\n      gaps.push(`Fewer years of experience than preferred (${candidate.yearsOfExperience} vs ${requiredYears} years)`);\n    }\n  } else {\n    gaps.push('Years of experience not specified');\n  }\n  \n  // Analyze education\n  const educationReqs = job.requirements.filter(req => \n    req.toLowerCase().includes('degree') || \n    req.toLowerCase().includes('education') ||\n    req.toLowerCase().includes('bachelor') ||\n    req.toLowerCase().includes('master')\n  );\n  \n  if (educationReqs.length > 0) {\n    if (candidate.education && candidate.education.length > 0) {\n      const hasMatchingEducation = educationReqs.some(req => \n        candidate.education!.some(edu => \n          req.toLowerCase().includes(edu.degree.toLowerCase()) ||\n          edu.degree.toLowerCase().includes('early childhood') ||\n          edu.degree.toLowerCase().includes('education')\n        )\n      );\n      \n      if (hasMatchingEducation) {\n        strengths.push('Education requirements met');\n      } else {\n        gaps.push('May not fully meet education requirements');\n      }\n    } else {\n      gaps.push('No education information provided');\n    }\n  }\n  \n  // Analyze certifications\n  const certReqs = job.requirements.filter(req => \n    req.toLowerCase().includes('certif') || \n    req.toLowerCase().includes('license') ||\n    req.toLowerCase().includes('cpr') ||\n    req.toLowerCase().includes('first aid')\n  );\n  \n  if (certReqs.length > 0) {\n    if (candidate.certifications && candidate.certifications.length > 0) {\n      const hasCertifications = certReqs.some(req => \n        candidate.certifications!.some(cert => \n          req.toLowerCase().includes(cert.toLowerCase()) ||\n          cert.toLowerCase().includes('cpr') ||\n          cert.toLowerCase().includes('first aid')\n        )\n      );\n      \n      if (hasCertifications) {\n        strengths.push('Has required certifications');\n      } else {\n        gaps.push('May need to obtain specific certifications');\n      }\n    } else {\n      gaps.push('No certifications listed');\n    }\n  }\n  \n  // Analyze location\n  if (candidate.location && job.location) {\n    const candidateCity = candidate.location.split(',')[0].trim().toLowerCase();\n    const jobCity = job.location.split(',')[0].trim().toLowerCase();\n    \n    if (candidateCity === jobCity) {\n      strengths.push(`Located in same area (${candidateCity})`);\n    } else {\n      gaps.push(`Location difference may require commute or relocation`);\n    }\n  }\n  \n  // Analyze job type preference\n  if (candidate.preferredJobTypes && candidate.preferredJobTypes.includes(job.type)) {\n    strengths.push('Job type aligns with preferences');\n  } else if (candidate.preferredJobTypes && candidate.preferredJobTypes.length > 0) {\n    gaps.push('Job type may not match stated preferences');\n  }\n  \n  return { strengths, gaps };\n};\n\n/**\n * Generates a human-readable summary of recommendations for a job\n * @param job - The job posting\n * @param topCandidates - Array of top recommended candidates\n * @returns A summary paragraph for recruiters\n */\nexport const generateRecommendationSummary = (\n  job: Job, \n  topCandidates: RecommendedCandidate[]\n): string => {\n  if (topCandidates.length === 0) {\n    return `No qualified candidates found for the ${job.title} position at ${job.organizationName}. Consider adjusting requirements or expanding your search criteria.`;\n  }\n  \n  const topCandidate = topCandidates[0];\n  const avgScore = topCandidates.reduce((sum, candidate) => sum + candidate.matchScore, 0) / topCandidates.length;\n  \n  let summary = `We found ${topCandidates.length} qualified candidate${topCandidates.length > 1 ? 's' : ''} for the ${job.title} role at ${job.organizationName}. `;\n  \n  summary += `The top match is ${topCandidate.firstName} ${topCandidate.lastName} with a ${topCandidate.matchScore}% compatibility score. `;\n  \n  // Add assessment based on average score\n  if (avgScore >= 85) {\n    summary += 'The candidate pool is exceptionally strong with multiple highly qualified applicants.';\n  } else if (avgScore >= 70) {\n    summary += 'The overall candidate pool is strong with several well-qualified applicants.';\n  } else if (avgScore >= 55) {\n    summary += 'The candidate pool shows promise, though some candidates may need additional training or development.';\n  } else {\n    summary += 'Consider expanding your search or adjusting requirements to find more closely matched candidates.';\n  }\n  \n  // Add insights about top candidate\n  if (topCandidate.yearsOfExperience) {\n    summary += ` ${topCandidate.firstName} brings ${topCandidate.yearsOfExperience} years of relevant experience`;\n    \n    if (topCandidate.education && topCandidate.education.length > 0) {\n      const degree = topCandidate.education[0].degree;\n      summary += ` and holds a ${degree}`;\n    }\n    \n    summary += '.';\n  }\n  \n  return summary;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}